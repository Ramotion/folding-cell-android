apply plugin: 'com.android.library'
apply plugin: 'signing'
apply plugin: 'com.bmuschko.nexus'
apply plugin: "jacoco"

group = 'com.ramotion.foldingcell'
version = '1.2.1'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.3'
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 5
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix " Debug"
            debuggable true
            testCoverageEnabled = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    productFlavors {
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
}

modifyPom {
    project {
        name 'Folding Cell for Android'
        description 'FoldingCell is an expanding content cell inspired by folding paper material http://ramotion.com'
        url 'https://github.com/Ramotion/folding-cell-android'
        inceptionYear '2016'

        scm {
            url 'https://github.com/Ramotion/folding-cell-android'
            connection 'scm:git@github.com:Ramotion/folding-cell-android.git'
            developerConnection 'scm:git@github.com:Ramotion/folding-cell-android.git'
        }

        licenses {
            license {
                name 'The MIT License (MIT)'
                url 'https://opensource.org/licenses/mit-license.php'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'oleg-vasiliev'
                name 'Oleg Vasiliev'
                email 'oleg-vasiliev@hotmail.com'
            }
        }
    }
}

extraArchive {
    sources = false
    tests = false
    javadoc = false
}

nexus {
    sign = true
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
}

jacoco {
    toolVersion = "0.7.6.201602180812"
    reportsDir = file("$buildDir/reports/jacoco")

}

task jacocoReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
    group = 'Reporting'
    description = 'Generate Jacoco coverage reports after running tests.'

    reports {
        xml.enabled = true
        html.enabled = true
    }

    classDirectories = fileTree(
            dir: 'build/intermediates/classes/debug',
            excludes: [
                    '**/R*.class',
                    '**/BuildConfig*'
            ]
    )

    sourceDirectories = files('src/main/java')
    executionData = files('build/jacoco/testDebugUnitTest.exec')

    doFirst {
        files('build/intermediates/classes/debug').getFiles().each { file ->
            if (file.name.contains('$$')) {
                file.renameTo(file.path.replace('$$', '$'))
            }
        }
    }
}
